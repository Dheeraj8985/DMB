#include<bits/stdc++.h>
using namespace std;

struct item{
    int value,weight;
    item(int value, int weight){
        this->value=value;
        this->weight=weight;

    }
};
// Comparison function to sort items according to value/weight ratio
bool cmp(struct item a,struct item b){
    double r1=(double) a.value / (double) a.weight;
    double r2=(double) b.value / (double) b.weight;
    return r1 > r2;
}
double fractionalknapsack(int w,struct item arr[],int n){
    sort(arr,arr+n,cmp);
    double finalvalue=0.0;
    for(int i=0;i<n;i++){
        // If adding Item won't overflow,
        // add it completely
        if (arr[i].weight <= w) {
            w -= arr[i].weight;
            finalvalue += arr[i].value;
        }
        // If we can't add current Item,
        // add fractional part of it
        else {
            finalvalue+= arr[i].value * ((double)w / (double)arr[i].weight);
            break;
        }
    }
    // Returning final value
    return finalvalue;
}
int main()
{
    int w = 50;
    item arr[] = { { 60, 10 }, { 100, 20 }, { 120, 30 } };
 
    int n = sizeof(arr) / sizeof(arr[0]);
 
    // Function call
    cout << fractionalknapsack(w, arr, n);
    return 0;
}